<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.ac.ebi.pride.tools</groupId>
	<artifactId>mzdata-parser</artifactId>
	<version>1.2.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mzdata-parser</name>
	<description>A read-only library to parse mzData files. This library implements the PeakListParser interface.</description>
    <url>http://code.google.com/p/jmzreader/</url>
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>jgriss</id>
            <name>Johannes Griss</name>
            <email>jgriss@ebi.ac.uk</email>
            <organization>European Bioinformatics Institute</organization>
            <organizationUrl>http://ebi.ac.uk/pride</organizationUrl>
        </developer>
    </developers>
    <organization>
        <name>European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk</url>
    </organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- you can use this plugin to generate the jaxb object model from the 
					schema and binding files specified below. Note: this will need an explicit 
					maven goal call, since it is not intergrated into the standard mvn lifecycle. 
					The goal to use is: org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:0.7.3:generate 
					NOTE: the code generation may overwrite existing classes, so care should 
					be taken with files that were manually modified. -->
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.7.3</version>
				<configuration>
					<extension>true</extension>
					<schemaDirectory>src/main/resources</schemaDirectory>
					<schemaIncludes>
						<include>mzdata.xsd</include>
					</schemaIncludes>
					<bindingDirectory>src/main/resources</bindingDirectory>
					<bindingIncludes>
						<include>mzdata-bindings.xjb</include>
					</bindingIncludes>
					<!-- NOTE THAT SOURCE IS GENERATED IN A DISTINCT FOLDER -->
					<!-- TO AVOID LOSING CUSTOMIZATIONS IN EXISTING SOURCE -->
					<generateDirectory>src/main/java</generateDirectory>
					<removeOldOutput>false</removeOldOutput>
					<forceRegenerate>true</forceRegenerate>
					<verbose>true</verbose>
					<args>
						<arg>-no-header</arg>
					</args>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<goals>deploy</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>psidev.psi.tools</groupId>
            <artifactId>xxindex</artifactId>
            <version>0.11</version>
        </dependency>
        <dependency>
            <groupId>uk.ac.ebi.pride.tools</groupId>
            <artifactId>jmzreader</artifactId>
            <version>1.2.0</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>ebi-repo</id>
            <name>The EBI internal repository</name>
            <url>http://www.ebi.ac.uk/~maven/m2repo</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>ebi-snapshot-repo</id>
            <name>The EBI internal snapshot repository</name>
            <url>http://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>java-net</id>
			<name>Java Net Repository</name>
			<url>http://download.java.net/maven/2</url>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>ebi-repo</id>
			<name>EBI Repository</name>
			<url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo</url>
		</repository>
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>ebi-repo-snapshots</id>
			<name>EBI Snapshots Repository</name>
			<url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo_snapshots</url>
		</snapshotRepository>
	</distributionManagement>

    <scm>
    	<connection>scm:svn:https://jmzreader.googlecode.com/svn/parser/mzdata-parser/trunk</connection>
    	<developerConnection>scm:svn:https://jmzreader.googlecode.com/svn/parser/mzdata-parser/trunk</developerConnection>
    	<url>https://jmzreader.googlecode.com/svn/parser/mzdata-parser/trunk</url>
    </scm>

</project>

#
# $Id: Jamfile.jam 2304 2010-10-20 16:50:47Z chambm $
#
#
# Original author: Darren Kessner <darren@proteowizard.org>
#
# Copyright 2008 Spielberg Family Center for Applied Proteomics
#   Cedars-Sinai Medical Center, Los Angeles, California  90048
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#


project
    : requirements 
        # hacks to allow building with <warnings>all with MSVC and boost::ublas
        <toolset>msvc:<cxxflags>/wd4267 # warning: conversion from 'size_t' to 'int' 
                                        # (boost/numeric/ublas/lu.hpp)
        <toolset>msvc:<cxxflags>/wd4244 # warning: conversion from '__w64 int' to 'const int'
                                        # (boost/numeric/ublas/traits.hpp)
        <toolset>msvc:<cxxflags>/wd4702 # warning: unreachable code
                                        # (boost/numeric/ublas/banded.hpp)

        # hacks for template stuff with MSVC
        <toolset>msvc:<cxxflags>/wd4510 # warning: default constructor could not be generated
        <toolset>msvc:<cxxflags>/wd4610 # warning: can never be instantiated - user defined constructor required
        <toolset>msvc,<link>shared:<define>PWIZ_DYN_LINK

        # hack for ublas internal check
        <define>NDEBUG 
;


lib pwiz_analysis_frequency
    : FrequencyEstimatorPhysicalModel.cpp
      FrequencyEstimatorSimple.cpp
      MagnitudeLorentzian.cpp
      ParameterEstimator.cpp
      PeakDetectorMatchedFilter.cpp
      PeakDetectorNaive.cpp
      TruncatedLorentzian.cpp
      TruncatedLorentzianEstimator.cpp
      TruncatedLorentzianParameters.cpp
    : # requirements
	    <library>../../utility/math//pwiz_utility_math
        <library>../../data/misc//pwiz_data_misc
        <library>../../utility/chemistry//pwiz_utility_chemistry
        <library>/ext/boost//filesystem
    : # default-build
    : # usage-requirements
	    <library>../../utility/math//pwiz_utility_math
        <library>../../data/misc//pwiz_data_misc
        <library>../../utility/chemistry//pwiz_utility_chemistry
        <library>/ext/boost//filesystem
    ;


unit-test-if-exists FrequencyEstimatorPhysicalModelTest : FrequencyEstimatorPhysicalModelTest.cpp pwiz_analysis_frequency ;
unit-test-if-exists FrequencyEstimatorSimpleTest : FrequencyEstimatorSimpleTest.cpp pwiz_analysis_frequency ;
unit-test-if-exists MagnitudeLorentzianTest : MagnitudeLorentzianTest.cpp MagnitudeLorentzianTestData.cpp pwiz_analysis_frequency ;
# TODO: Darren, please fix me! # unit-test-if-exists ParametrizedFunctionTest : ParametrizedFunctionTest.cpp pwiz_analysis_frequency ;
unit-test-if-exists PeakDetectorMatchedFilterTest : PeakDetectorMatchedFilterTest.cpp PeakDetectorMatchedFilterTestData.cpp pwiz_analysis_frequency ;
unit-test-if-exists PeakDetectorNaiveTest : PeakDetectorNaiveTest.cpp pwiz_analysis_frequency ;
unit-test-if-exists TruncatedLorentzianParametersTest : TruncatedLorentzianParametersTest.cpp pwiz_analysis_frequency ;
unit-test-if-exists TruncatedLorentzianTest : TruncatedLorentzianTest.cpp pwiz_analysis_frequency ;


